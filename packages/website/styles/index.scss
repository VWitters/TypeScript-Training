/* Code blocks look like:

  <pre class='shiki twoslash'>
  <div class='language-id>[lang-id]</div>
  <div class='code-container'>
      <code>[the code as a series of spans]</code>
  </div>
  </pre>
*/
$ts_blue: #235a97;
$body_background: #ddd;
$code_background: #fff;

$try_button_background: $ts_blue;
$try_button_text: #fff;
$try_button_border: 1px solid $ts_blue;

$try_button_hover_background: navy;
$try_button_hover_text: #fff;
$try_button_hover_border: 1px solid navy;

$tooltip_background_color: #3f3f3f;
$tooltip_text_color: #fff;

body {
  background: $body_background;
}

pre {
  /* In theory shiki will overwrite these, but this is to make sure there are defaults */
  // background-color: #111;
  color: white;

  font-family: Menlo, Monaco, Consolas, Courier New, monospace;

  /* All code samples get a grey border, twoslash ones get a different color */

  margin-bottom: 2rem;
  /* Important to allow the code to move horizontally; */
  overflow: auto;
  position: relative;

  &.shiki {
    overflow: initial;
    position: relative;
    /* So that folks know you can highlight */
  }
  &.twoslash {
    background: $code_background !important;
    border-left: 1px solid #999;
    border-bottom: 1px solid #999;
    border-right: 1px solid #ccc;
    border-top: 1px solid #ccc;
    box-shadow: -2px 2px 4px rgba(0, 0, 0, 0.1);
  }
  .code-container {
    /* Give it some space to breathe */
    margin: 14px;
    overflow: auto;
    /* Handle scrolling, and showing code correctly */

    .inline-completions {
      position: relative;
      top: 5px;
      left: -13px;
      display: inline-block;

      &::before {
        top: -4px;
        left: 0;
        display: block;
        width: 15px;
        height: 15px;
        border-top-right-radius: 100%;
        border-bottom-right-radius: 230%;
        border-bottom-left-radius: 200%;
        position: absolute;
        z-index: 999;
        transform: rotateZ(45deg);
        content: '';
        background: $tooltip_background_color;
      }
      ul.dropdown {
        padding: 4px;
        display: inline-block;
        color: darken($tooltip_text_color, 40%);
        background: $tooltip_background_color;
        li {
          margin-bottom: 0;
          display: block;
          .result-found {
            color: white;
          }
        }
      }
    }
    a[href^="https://www.typescriptlang.org"]
    {
      background: $try_button_background;
      border: $try_button_border;
      color: $try_button_text;
      padding: 0 8px;
      font-size: 0.8rem;
      position: absolute;
      right: 10px;
      line-height: 1.2rem;
      margin-top: 0;
      margin-bottom: 0;
      bottom: -22px;
      border-bottom-right-radius: 5px;
      border-bottom-left-radius: 5px;
      box-shadow: -2px 2px 4px rgba(0, 0, 0, 0.2);
      &:hover {
        border: $try_button_hover_border;
        background: $try_button_hover_background;
        color: $try_button_hover_text;
      }
    }
    & > code {
      /** Style setup */
      font-size: 16px;
      line-height: 20px;

      white-space: pre;
      -webkit-overflow-scrolling: touch;
      /* Let errors use the outer shiki for their absolute sizing, and not be affected by the scrolling of the code */
    }
    .query {
      display: inline-block;
      width: 100%;
      color: orange;
    }
  }

  data-err {
    background: url("data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%206%203'%20enable-background%3D'new%200%200%206%203'%20height%3D'3'%20width%3D'6'%3E%3Cg%20fill%3D'%23c94824'%3E%3Cpolygon%20points%3D'5.5%2C0%202.5%2C3%201.1%2C3%204.1%2C0'%2F%3E%3Cpolygon%20points%3D'4%2C0%206%2C2%206%2C0.6%205.4%2C0'%2F%3E%3Cpolygon%20points%3D'0%2C2%201%2C3%202.4%2C3%200%2C0.6'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E")
      repeat-x bottom left;
    padding-bottom: 3px;
    /* In order to have the 'popped out' style design and to not break the layout
  /* we need to place a fake and un-selectable copy of the error which _isn't_ broken out
  /* behind the actual error message.
  /* This section keeps both of those in sync  */
  }
  .error,
  .error-behind {
    margin-left: -20px;
    margin-top: 8px;
    margin-bottom: 4px;
    padding: 6px;
    padding-left: 14px;
    white-space: pre-wrap;
    display: block;
  }

  .error {
    position: absolute;
    background-color: #ffeeee;
    border-left: 2px solid #bf1818;
    width: calc(100% - 14px);
    /* Give the space to the error code  */
    display: flex;
    align-items: center;
    color: black;
    box-shadow: -2px 2px 4px rgba(0, 0, 0, 0.2);
    .code {
      display: none;
    }
  }
  .error-behind {
    user-select: none;
    color: #ffeeee;
  }
}
data-lsp {
  /* Ensures there's no 1px jump when the hover happens above */
  border-bottom: 1px dotted transparent;
  /* Fades in unobtrusively */
  transition-timing-function: ease;
  transition: border-color 0.3s;
  /* Respect people's wishes to not have animations */
  &:hover {
    background: rgba(255, 255, 100, 0.6);
  }
}
@media (prefers-reduced-motion: reduce) {
  data-lsp {
    transition: none;
  }
}
/** When you mouse over the pre, show the underlines */
pre:hover data-lsp {
  border-color: #747474;
}
/** The tooltip-like which provides the LSP response */
#twoslash-mouse-hover-info {
  background-color: $tooltip_background_color;
  color: $tooltip_text_color;
  box-shadow: 2px 2px 2px rgba(9, 0, 61, 0.2);
  text-align: left;
  padding: 5px 8px;
  border-radius: 2px;
  font-family: 'Jet Brains Mono', Menlo, Monaco, Consolas, Courier New,
    monospace;
  font-size: 14px;
  white-space: pre-wrap;
}

.course-tabs {
  list-style: none;
  .course-tab {
    display: inline-block;
    margin-left: 10px;
    a {
      color: grey !important;
    }
    a.active {
      color: blue !important;
    }
  }
}
